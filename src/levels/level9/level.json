{
    "title": "Перенаправление вывода (`>`)",
    "task": "### Дедовский Ликбез\n\nТы уже использовал эту хуйню в первом задании, но пора объяснить, как она работает. Знак `>` — это **перенаправление вывода**. Он берёт всё, что команда обычно печатает на экран, и вместо этого засовывает в файл.\n\n`ls > file_list.txt`\n\nЧто здесь произошло? `ls` отработала, но в консоли ты нихуя не увидел. Потому что `>` перехватила весь выхлоп и записала его в `file_list.txt`.\n\n**Важно, блядь:** Если файл `file_list.txt` уже существовал, `>` его **полностью перезапишет**. Весь старый контент пойдёт по пизде. Будь осторожен.\n\n### Твоя Задача\n\nВ файле `cat_fact.txt` лежит охуенно важная инфа. Создай её резервную копию.\n\n**Скопируй содержимое `cat_fact.txt` в новый файл `cat_fact_backup.txt` с помощью `cat` и перенаправления `>`**.",
    "hint": "Одна команда: `cat source_file > destination_file`.",
    "validation": [
        {
            "validator": "file_exists",
            "args": {
                "path": "cat_fact_backup.txt"
            }
        },
        {
            "validator": "file_contains",
            "args": {
                "path": "cat_fact_backup.txt",
                "content": "Кошки"
            }
        }
    ]
}